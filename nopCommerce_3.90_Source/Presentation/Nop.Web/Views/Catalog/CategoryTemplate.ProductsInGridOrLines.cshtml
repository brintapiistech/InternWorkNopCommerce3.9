@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
<script src="~/Scripts/public.common.js"></script>
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders


@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="breadcrumb">
            <ul>
                <li>
                    <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                    <span class="delimiter">@breadcrumbDelimiter</span>
                </li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                        {
                            <strong class="current-item">@cat.Name</strong>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                            <span class="delimiter">@breadcrumbDelimiter</span>
                        }
                    </li>
                }
            </ul>
        </div>
        @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
    }
}

<div class="page category-page">
    <div class="page-title">
        <h1>@Model.Name</h1>
    </div>
    <div>
        <input type="text" class="search-box-text" id="small-searchterms-category" autocomplete="off" placeholder="Seach this category" />
        <button type="button" class="btn btn-success" id="search" style="height: 35px;">Search</button>
    </div>


    <div class="page-body">
        @Html.Widget("categorydetails_top", Model.Id)
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="category-description">
                @Html.Raw(Model.Description)
            </div>
        }
        @Html.Widget("categorydetails_before_subcategories", Model.Id)
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
            <div class="category-grid sub-category-grid">
                <div class="item-grid">
                    @foreach (var item in Model.SubCategories)
                    {
                        <div class="item-box">
                            <div class="sub-category-item">
                                <h2 class="title">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                        @item.Name
                                    </a>
                                </h2>
                                <div class="picture">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                        <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        @Html.Widget("categorydetails_before_featured_products", Model.Id)
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>

                <div class="item-grid">

                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                   
                </div>
                 <h1>asuiuasyda</h1>
            </div> 

        }

        @Html.Widget("categorydetails_after_featured_products", Model.Id)
        @if (Model.Products.Count > 0)
        {
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
        }
        @Html.Widget("categorydetails_before_filters", Model.Id)
        <div class="product-filters">

            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }

            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>
        @Html.Widget("categorydetails_before_product_list", Model.Id)

        @if (Model.Products.Count > 0)
        {
            <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                <div class="item-grid">
                    @foreach (var product in Model.Products)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", product)
                        </div>
                    }
                </div>
            </div>
        }
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @Html.Widget("categorydetails_bottom", Model.Id)
    </div>
</div>

<script>
    $(function () {
        $(".ajax-loading-block-window").addClass('hide');
        $(document).bind('ajaxStart', function () {
            $(".ajax-loading-block-window").show();
        });
        $(document).bind('ajaxStop', function () {
            $(".ajax-loading-block-window").hide();
        });

    });




    //var setLoadWaiting = function (display) {
    //    displayAjaxLoading(display);
    //    this.loadWaiting = display;
    //}
    //function displayAjaxLoading(display) {
    //    if (display) {
    //        $('.ajax-loading-block-window').show();
    //    }
    //    else {
    //        $('.ajax-loading-block-window').hide('slow');
    //    }
    //}
    $(document).ready(function () {

        var requestdata = {
            categoryId : 3
        };
            $.ajax({
                url: "/Catalog/Categorylite_1",
                type: 'POST',
                data: JSON.stringify(requestdata),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log('ajax call from Categorylite_1');
                    console.log(data.result);
                },
                error: function () {
                    alert("Error!");
                }
            });

        var requestdata = {
            categoryId: 3
        };
        $.ajax({
            url: "/Catalog/Categorylite_2",
            type: 'POST',
            data: JSON.stringify(requestdata),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log('ajax call from Categorylite_2');
                console.log(data.result);
            },
            error: function () {
                alert("Error!");
            }
        });

        $("#search").click(function () {
            var requestData = {
                categoryId: @(Model.Id),
                searchtxt: $("#small-searchterms-category").val(),
            };
            //$.ajax({
            //    url: "/Catalog/CategoryLite",
            //    type: 'POST',
            //    data: JSON.stringify(requestData),
            //    dataType: 'json',
            //    contentType: 'application/json; charset=utf-8',
            //    success: function (data) {
            //        console.log('ajax call check category product');
            //        console.log(data.result);
            //    },
            //    error: function () {
            //        alert("Error!");
            //    }
            //});
            $.ajax({
                url: "/Catalog/Categorylite",
                type: 'POST',
                data: JSON.stringify(requestData),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log('ajax call check home category product');
                    console.log(data.result);

                    //console.log(data.result.length);

                    var datalength = data.result.length;
                    if (datalength == 0) {
                        $(".datafound").show();
                        $(".price-filter").hide();
                    }
                    else {
                        $(".price-filter").show();
                        $(".datafound").hide();
                    }
                    var tmplt = "";
                    var ratingPercent = 0;
                    for (var i = 0; i < datalength; i++) {

                        var res = data.result[i];

                        console.log(res.SeName);

                        //console.log(res.DefaultPictureModel.ImageUrl);
                        //alert('1323')
                        var ck = res.ReviewOverviewModel.RatingSum;
                        var totalreview = res.ReviewOverviewModel.TotalReviews;

                        if (ck != null && ck != 0 && ck != "undefine") {
                            console.log(res.ReviewOverviewModel.RatingSum);
                            console.log(res.ReviewOverviewModel.TotalReviews);

                            ratingPercent = ((ck * 100) / totalreview) / 5;


                        }
                        var template = '<div class=item-box>'
                            + '<div class=' + 'product-item' + 'data-productid=' + res.Id + '>'
                            + '<div class=picture>'
                            + '<a href=' + '"' + '/' + res.SeName + '"' + 'title=' + '"' + res.DefaultPictureModel.Title + '"' + '>'
                            + '<img src=' + '"' + res.DefaultPictureModel.ImageUrl + '"' + 'style=width:283px' + '>'
                            + '</a>'
                            + '</div>'
                            + '<div class=' + 'details' + '>' + '<h2 class=' + 'product-title' + ' >' /*+ '<a href=' + '/' + res.SeName + '>'+'sa'+  '</a>'*/ + '<a href=' + '"' + '/' + res.SeName + '"' + '>' + res.Name + '</a>' + '</h2> '
                            + '<div class=' + 'product-rating-box' + ' ' + 'title=' + '"' + res.DefaultPictureModel.Title + '"' + '>'
                            + '<div class=' + 'rating' + '>'
                            + '<div style=width:'+ratingPercent+'%>'
                            + '</div>'
                            + '</div>'
                            + '</div>'

                            + '<div class=' + 'description' + '>'
                            + '</div>'

                            + '<div class=' + 'add-info' + '>'
                            + '<div class=' + 'prices' + '>' + '<span class=price actual-price>' + res.ProductPrice.Price + '</span>'
                            + '</div>'
                            + '<div class=buttons>'
                            + '<input type=' + 'button' + ' ' + 'value=' + '"' + 'Add to chart' + '"' + 'class=' + '"' + 'button-2 product-box-add-to-cart-button' + '"' + 'onclick=' + '"' + 'AddToCartFunc(' + res.Id + ');' + '"' + '>'
                            + '<input type=' + 'button' + ' ' + 'value=' + '"' + 'Add to chart' + '"' + 'class=' + '"' + 'button-2 add-to-wishlist-button' + '"' + 'onclick=' + '"' + 'AddToCartFuncWishlist(' + res.Id + ');' + '"' + '>'
                            + '</div>'
                            + '</div>'
                            + '</div > '
                            + '</div>'
                            + '</div>'
                        console.log(template);
                        tmplt = tmplt + template;
                    }
                    console.log(tmplt);
                    $(".item-grid").html(tmplt);
                    //console.log(data.result[0].Name);
                    //console.log(data.result[0].SeName);
                    //console.log(data.result[0].PictureModel);
                    //console.log(data.result[0].PictureModel.ImageUrl);
                    //console.log(data.result[0].PictureModel.AlternateText);
                    //console.log(data.result[0].PictureModel.Title);
                    //var altr = data.result[0].PictureModel.AlternateText;
                    //$(".item-grid").html("<div class=" + "productClass" + ">" + '<img alt=' + '"' + altr + '"' + 'src=' + '"' + data.result[0].PictureModel.ImageUrl + '"' + 'title=' + '"' + data.result[0].PictureModel.Title + '"' + ">" + "</>"
                    //    + "<div class=" + "description" + ">" + "Name:" + "<br>" + data.result[0].Name + "<br>" + "Se-Name:" + "<br>" + data.result[0].SeName + "</div>" + "</div>");

                    // Using for category_product
                    //var l = data.result.length;
                    //console.log(l);
                    //for (var i = 0; i < l; i++) {
                    //    console.log(data.result[i].Name);
                    //    console.log(data.result[i].SeName);
                    //    console.log(data.result[i].DefaultPictureModel);
                    //    console.log(data.result[i].DefaultPictureModel.AlternateText);
                    //    console.log(data.result[i].DefaultPictureModel.ImageUrl);
                    //    console.log(data.result[i].DefaultPictureModel.Title);
                    //    console.log(data.result[i].Id);

                    //    var altr = data.result[i].DefaultPictureModel.AlternateText;

                    //    $(".product-grid").html("<div class=" + "item-box" + ">" + "<div class=" + "product-item" + " data-productid=" + data.result[i].Id + ">" + "<div class=" + "picture" + ">" + '<img alt=' + '"' + altr + '"' + 'src=' + '"' + data.result[i].DefaultPictureModel.ImageUrl + '"' + 'title=' + '"' + data.result[i].DefaultPictureModel.Title + '"' + ">" + "</div>" + "</div>" + "</div>");

                    //}
                    //console.log(data.result[0].Name);
                    //console.log(data.result[0].SeName);
                    //console.log(data.result[0].DefaultPictureModel);
                    //console.log(data.result[0].DefaultPictureModel.AlternateText);
                    //console.log(data.result[0].DefaultPictureModel.ImageUrl);
                    //console.log(data.result[0].DefaultPictureModel.Title);
                    //console.log(data.result[0].Id);

                    //var pId = data.result[].Id;
                    //var altr = data.result[].DefaultPictureModel.AlternateText;
                    //var imageurl = data.result[].DefaultPictureModel.ImageUrl;
                    //var title = data.result[].DefaultPictureModel.Title;

                    //$(".item-grid").html(
                    //    "<div class=" + "item-box" + ">"
                    //    + "<div class=" + "product-item" + " data-productid=" + pId + ">"
                    //    + "<div class=" + "picture" + ">"
                    //    + '<img alt=' + '"' + altr + '"' + 'src=' + '"' + imageurl + '"' + 'title=' + '"' + title + '"' + ">"
                    //    + "</div>"
                    //    + "</div>"
                    //    + "</div>");


                },
                error: function () {
                    alert("Error!");
                },
              
            });
        });

        $("#PriceSearch").click(function () {
            var min, max;
            min = $("#minimum").val();
            max = $("#maximum").val();
            if (min != "" && max !="")
            {
                 var requestData = {
                categoryId: @(Model.Id),
                searchtxt: $("#small-searchterms-category").val(),

                Minimum: $("#minimum").val(),
                Maximum: $("#maximum").val(),
                   };

            $.ajax({
                url: "/Catalog/Categorylite",
                type: 'POST',
                data: JSON.stringify(requestData),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log('ajax call check home category product');
                    console.log(data.result);

                    var datalength = data.result.length;
                    if (datalength == 0) {
                        $(".datafound").show();
                    }
                    else {
                        $(".datafound").hide();
                    }
                    var tmplt = "";
                    var ratingPercent = 0;
                    for (var i = 0; i < datalength; i++) {

                        var res = data.result[i];

                        //console.log(res.DefaultPictureModel.ImageUrl);
                        //alert('1323')
                        var ck = res.ReviewOverviewModel.RatingSum;
                        var totalreview = res.ReviewOverviewModel.TotalReviews;

                        if (ck != null && ck != 0 && ck != "undefine") {
                            console.log(res.ReviewOverviewModel.RatingSum);
                            console.log(res.ReviewOverviewModel.TotalReviews);

                            ratingPercent = ((ck * 100) / totalreview) / 5;

                        }
                        var template = '<div class=item-box>'
                            + '<div class=' + 'product-item' + 'data-productid=' + res.Id + '>'
                            + '<div class=picture>'
                            + '<a href=' + '"' + '/' + res.SeName + '"' + 'title=' + '"' + res.DefaultPictureModel.Title + '"' + '>'
                            + '<img src=' + '"' + res.DefaultPictureModel.ImageUrl + '"' + 'style=width:283px' + '>'
                            + '</a>'
                            + '</div>'
                            + '<div class=' + 'details' + '>' + '<h2 class=' + 'product-title' + ' >' /*+ '<a href=' + '/' + res.SeName + '>'+'sa'+  '</a>'*/ + '<a href=' + '"' + '/' + res.SeName + '"' + '>' + res.Name + '</a>' + '</h2> '
                            + '<div class=' + 'product-rating-box' + ' ' + 'title=' + '"' + res.DefaultPictureModel.Title + '"' + '>'
                            + '<div class=' + 'rating' + '>'
                            + '<div style=width:' + ratingPercent + '%>'
                            + '</div>'
                            + '</div>'
                            + '</div>'

                            + '<div class=' + 'description' + '>'
                            + '</div>'

                            + '<div class=' + 'add-info' + '>'
                            + '<div class=' + 'prices' + '>' + '<span class=price actual-price>' + res.ProductPrice.Price + '</span>'
                            + '</div>'
                            + '<div class=buttons>'
                            + '<input type=' + 'button' + ' ' + 'value=' + '"' + 'Add to chart' + '"' + 'class=' + '"' + 'button-2 product-box-add-to-cart-button' + '"' + 'onclick=' + '"' + 'AddToCartFunc(' + res.Id + ');' + '"' + '>'
                            + '<input type=' + 'button' + ' ' + 'value=' + '"' + 'Add to chart' + '"' + 'class=' + '"' + 'button-2 add-to-wishlist-button' + '"' + 'onclick=' + '"' + 'AddToCartFuncWishlist(' + res.Id + ');' + '"' + '>'
                            + '</div>'
                            + '</div>'
                            + '</div > '
                            + '</div>'
                            + '</div>'
                        console.log(template);
                        tmplt = tmplt + template;
                    }
                    console.log(tmplt);
                    $(".item-grid").html(tmplt);


                },
                error: function () {
                    alert("Error!");
                }
             });



            }
            else
            {


                alert("Please entry minimum amd maximum price !");
            }
        });
    });

    var AddToCartFunc = function(pId) {

            var requestData = {
                productId: pId,
                shoppingCartTypeId: 1,
                quantity: 1,
                forceredirection: false,
            };
            $.ajax({
                url: "/ShoppingCart/AddProductToCart_Catalog",
                type: 'POST',
                data: JSON.stringify(requestData),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.success == true) {
                     $(".cart-qty").html(data.updatetopcartsectionhtml);
                        displayBarNotification(data.message, 'success', 3500);
                        $("#flyout-cart").replaceWith(data.updateflyoutcartsectionhtml)
                    }
                    else {
                           location.href = data.redirect;
                    }
                    //console.log(data.redirect);
                    //location.href = "/Employee/getallemployees"
                  

                    console.log(data);
                    //console.log('added to cart');
                    //alert('added to cart');

                },
                error: function () {
                    alert("Error!");
                }

            });
        }
    var AddToCartFuncWishlist = function (pId) {
            var requestData = {
                productId: 3,
                shoppingCartTypeId: 2,
                quantity: 1,
                forceredirection: false,
            };
            $.ajax({
                url: "/ShoppingCart/AddProductToCart_Catalog",
                type: 'POST',
                data: JSON.stringify(requestData),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log('ajax call add to Wishlist');
                    console.log(data);
                    //alert('added to Wishlist');
                    $(".wishlist-qty").html(data.updatetopwishlistsectionhtml);
                    //$("#bar-notification").append();
                    console.log(data.updatetopwishlistsectionhtml);
                    displayBarNotification(data.message, 'success', 3500);
                    //var templt = '<ui>'
                    //    + '<li>'
                    //    + '<a href=' + '"' + '/register"' + 'class=' + '"ico-register"' + '>' +'Register'
                    //    + '</li>'
                    //    + '<li>'
                    //    + '<a href=' + '"' + '/login"' + 'class=' + '"ico-login"' + '>' + 'Log in'
                    //    + '</li>'
                    //    + '<li>'
                    //    + '<a href=' + '"' + '/Wishlist"' + 'class=' + '"ico-wishlist"' + '>'
                    //    + '<span class=wishlist-label>' + 'Wishlist' + '</span>'
                    //    + '<span class=wishlist-qty>' + totalwish  +'</span>'
                    //    + '</a>'
                    //    + '</li>'
                    //    + '<li id=topcartlink>'
                    //    + '<a href=' + '"' + '/cart"' + 'class=' + '"ico-cart"' + '>'
                    //    + '<span class=cart-label>' + 'Shopping cart' + '</span>'
                    //    + '<span class=cart-qty>' + '</span>'
                    //    + '</a>'
                    //    + '</li>'
                    //    + '</ui>'
                    //$(".header-links").html(templt);
                    //$(".wish").html(+ '<li>'
                    //    + '<a href=' + '"' + '/Wishlist"' + 'class=' + '"ico-wishlist"' + '>'
                    //    + '<span class=wishlist-label>' + 'Wishlist' + '</span>'
                    //    + '<span class=wishlist-qty>' + totalwish + '</span>'
                    //    + '</a>'
                    //    + '</li>');
                },
                error: function () {
                    alert("Error!");
                }
            });
        }

        //< a href = "/register" class="ico-register" > Register</a >
</script>



